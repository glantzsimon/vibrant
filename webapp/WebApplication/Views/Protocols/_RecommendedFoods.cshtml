@using K9.Base.DataAccessLayer.Attributes;
@using K9.Base.WebApplication.Helpers
@using K9.DataAccessLayer.Attributes
@using K9.DataAccessLayer.Enums
@using K9.DataAccessLayer.Helpers
@using K9.SharedLibrary.Extensions
@using K9.WebApplication.Helpers
@model K9.WebApplication.ViewModels.RecommendedFoodsViewModel


@if (Model.RecommendedFoods.Any())
{
    <ul class="nav nav-pills">
        @for (int i = 0; i < Model.FoodGroups.Count; i++)
        {
            var foodGroup = Model.FoodGroups[i];
            var foodGroupName = foodGroup.ToString();
            var foodGroupDescription = foodGroup.GetAttribute<EnumDescriptionAttribute>().GetDescription();
            var activeClass = i == 0 ? "active" : "";

            <li class="@activeClass"><a data-toggle="pill" href="#@foodGroupName">@foodGroupDescription</a></li>
        }
    </ul>

    <div class="tab-content">
        @for (int i = 0; i < Model.FoodGroups.Count; i++)
        {
            var foodGroup = Model.FoodGroups[i];
            var foodGroupName = foodGroup.ToString();
            var activeClass = i == 0 ? "active in" : "";

            <div id="@foodGroupName" class="tab-pane fade @activeClass padding-top-15">
                @foreach (var level in Model.Levels)
                {
                    var levelName = level.GetAttribute<EnumDescriptionAttribute>().GetDescription();
                    var compatibilityEnumMetaDataAttribute = level.GetAttribute<ECompatibilityEnumMetaDataAttribute>();
                    var levelDescription = compatibilityEnumMetaDataAttribute.GetDescription();
                    var levelColor = compatibilityEnumMetaDataAttribute.Color;
                    var filteredFoods = Model.GetRecommendedFoodsForLevelAndGroup(foodGroup, level);

                    <div class="well">
                        <div class="row">
                            <div class="col-xs-12">
                                <h4>@levelName</h4>
                                <p><i>@levelDescription</i></p>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="col-xs-12">
                                @if (filteredFoods != null && filteredFoods.Any())
                                {
                                    for (int j = 0; j < filteredFoods.Count; j++)
                                    {
                                        var recommendedFood = filteredFoods[j];
                                        <span>@recommendedFood.GetRelativeScoreHtml()</span>
                                        <span class="summary-item" style="background-color: @levelColor !important;">@recommendedFood.Name</span>
                                    }
                                }
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
    </div>
}




