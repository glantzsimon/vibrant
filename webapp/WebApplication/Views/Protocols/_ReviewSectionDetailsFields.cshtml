@using K9.Base.WebApplication.Helpers
@using K9.WebApplication.Helpers
@model Protocol

@{
    var allProducts = Model.GetAllProducts();
}

@Html.HiddenFor(e => Model.Id)

<div class="row">
    <div class="col-sm-2">
        @Html.LabelFor(e => Model.ProtocolSections[0].Section.Name)
    </div>
    <div class="col-sm-4">
        @Html.LabelFor(e => Model.ProtocolSections[0].Section.ShortDescription)
    </div>
    <div class="col-sm-6">
        <div class="row">
            <div class="col-sm-7">
                @Html.LabelFor(e => Model.ProtocolSections[0].ProtocolSectionProducts[0].ProductName)
            </div>
            <div class="col-sm-5">
                @Html.LabelFor(e => Model.ProtocolSections[0].ProtocolSectionProducts[0].Product.Dosage)
            </div>
        </div>
    </div>
</div>
<hr />

@for (int i = 0; i < Model.ProtocolSections.Count; i++)
{
    @Html.HiddenFor(e => Model.ProtocolSections[i].Id)
    @Html.HiddenFor(e => Model.ProtocolSections[i].SectionId)
    @Html.HiddenFor(e => Model.ProtocolSections[i].Section.Name)
    var section = Model.ProtocolSections[i];

    <div class="row">
        <div class="col-sm-2">
            @Html.DisplayFor(e => section.Section.Name)
        </div>
        <div class="col-sm-4">
            @Html.DisplayFor(e => section.Section.ShortDescription)
        </div>
        <div class="col-sm-6">
            @for (int j = 0; j < Model.ProtocolSections[i].ProtocolSectionProducts.Count; j++)
            {
                var product = Model.ProtocolSections[i].ProtocolSectionProducts[j];

                @Html.HiddenFor(e => Model.ProtocolSections[i].ProtocolSectionProducts[j].Id)
                @Html.HiddenFor(e => Model.ProtocolSections[i].ProtocolSectionProducts[j].Product.Id)
                @Html.HiddenFor(e => Model.ProtocolSections[i].ProtocolSectionProducts[j].Product.ProductType)
                @Html.HiddenFor(e => Model.ProtocolSections[i].ProtocolSectionProducts[j].Product.Amount)

                if (product.IsVisible && product.Amount > 0)
                {
                    <div class="row">
                        <div class="col-sm-7">
                            @Html.Label(product.Product.Name)
                        </div>
                        <div class="col-sm-5">
                            @Html.BootstrapDisplayFor(e => Model.ProtocolSections[i].ProtocolSectionProducts[j].Amount, new EditorOptions
                            {
                                Label = ""
                            })
                        </div>
                    </div>
                }
            }
        </div>
    </div>
    <hr />
}

<div class="row">
    <div class="col-sm-2">
        <h4>@Dictionary.SummaryLabel</h4>
    </div>
    <div class="col-sm-4">
    </div>
    <div class="col-sm-6">
        @for (int j = 0; j < allProducts.Count; j++)
        {
            var product = allProducts[j];
            var protocolProduct = Model.GetProtocolProductByProductId(product.Id);
            var protocolProductPackProduct = Model.GetProtocolProductPackProductByProductId(product.Id);
            var totalAmountRequired = protocolProduct?.AmountRequired + protocolProductPackProduct?.AmountRequired ?? 0;
            var actualAmount = protocolProduct?.Amount + protocolProductPackProduct?.Amount ?? 0;

            <div class="row">
                <div class="col-sm-7">
                    @Html.Label(product.Name)
                </div>
                <div class="col-sm-5">
                    <div class="row">
                        <div class="col-xs-6">
                            <span>Required: @totalAmountRequired</span>
                        </div>
                        <div class="col-xs-6">
                            <span>Actual: @actualAmount</span>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>