@using K9.Base.DataAccessLayer.Attributes;
@using K9.Base.WebApplication.Helpers
@using K9.DataAccessLayer.Attributes
@using K9.DataAccessLayer.Enums
@using K9.DataAccessLayer.Helpers
@using K9.SharedLibrary.Extensions
@using K9.WebApplication.Helpers
@model K9.WebApplication.ViewModels.RecommendedFoodsViewModel


@if (Model.RecommendedFoods.Any())
{
    for (int i = 0; i < Model.FoodGroups.Count; i++)
    {
        var foodGroup = Model.FoodGroups[i];
        var foodGroupName = foodGroup.ToString();
        var foodGroupDescription = foodGroup.GetAttribute<EnumDescriptionAttribute>().GetDescription();
        var bestFoods = Model.GetBestFoods(foodGroup);
        var worstFoods = Model.GetWorstFoods(foodGroup);

        <div class="well print-page-break">

            <div class="row">
                <div class="col-xs-12">
                    <h4 class="section-title">Staple @foodGroupDescription</h4>
                </div>
            </div>

            <br />

            <div class="row">
                <div class="col-xs-12">
                    @if (bestFoods != null && bestFoods.Any())
                    {
                        for (int j = 0; j < bestFoods.Count; j++)
                        {
                            var recommendedFood = bestFoods[j];

                            <span data-id="@recommendedFood.Id" class="summary-item recommended-food" style="background-color: lightblue !important;">
                                @Html.Raw(recommendedFood.GetRelativeScoreHtml())
                                <span>@recommendedFood.Name</span>
                            </span>
                        }
                    }
                </div>
            </div>

            <br />

            <div class="row">
                <div class="col-xs-12">
                    <h4 class="section-title">@foodGroupDescription To Minimise / Avoid</h4>
                </div>
            </div>

            <br />

            <div class="row">
                <div class="col-xs-12">
                    @if (worstFoods != null && worstFoods.Any())
                    {
                        for (int j = 0; j < worstFoods.Count; j++)
                        {
                            var worstFood = worstFoods[j];

                            <span data-id="@worstFood.Id" class="summary-item recommended-food" style="background-color: red !important;">
                                @Html.Raw(worstFood.GetRelativeScoreHtml())
                                <span>@worstFood.Name</span>
                            </span>
                        }
                    }
                </div>
            </div>

        </div>
    }
}
