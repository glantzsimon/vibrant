@using System.Globalization
@using K9.SharedLibrary.Helpers
<script type="text/javascript">

	$(function () {
		$.fn.formatBytes = function (bytes, si) {
			var thresh = si ? 1000 : 1024;
			if (Math.abs(bytes) < thresh) {
				return bytes + ' B';
			}
			var units = ['KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];
			var u = -1;
			do {
				bytes /= thresh;
				++u;
			} while (Math.abs(bytes) >= thresh && u < units.length - 1);
			return bytes.toFixed(1) + ' ' + units[u];
		};

		$.fn.createGuid = function () {
			return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
				var r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);
				return v.toString(16);
			});
		};

		var entityMap = {
			"&": "&amp;",
			"<": "&lt;",
			">": "&gt;",
			'"': '&quot;',
			"'": '&#39;',
			"/": '&#x2F;'
		};

		$.fn.htmlEncode = function(text) {
			return String(text).replace(/[&<>"'\/]/g, function (s) {
				return entityMap[s];
			});
		};

		$.fn.getFileExtension = function(filename) {
			return '.' + filename.split('.').pop();
		};

		$.fn.isImage = function(filename) {
			return @(MvcHtmlString.Create(Json.Encode(HelperMethods.GetImageFileExtensions().ToArray()))).indexOf($.fn.getFileExtension(filename)) >= 0;
		};

		bootstrapControls({
			language: "@CultureInfo.CurrentUICulture.TwoLetterISOLanguageName.ToLower()",
			dateFormat: "@CultureInfo.CurrentUICulture.DateTimeFormat.ShortDatePattern.ToUpper()"
		}).init();

		buttonBehaviours().init();

		fadePageIn().init();

		scroller().init();

		fileUploader({
			deleteText: "@Dictionary.Delete",
			filesSelectedText: "@Dictionary.FilesSelected"
		}).init();
	});

</script>
