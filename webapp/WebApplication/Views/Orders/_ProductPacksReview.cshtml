@using K9.Base.WebApplication.Extensions
@using K9.Base.WebApplication.Helpers
@using K9.WebApplication.Helpers
@model Order

@for (int i = 0; i < Model.ProductPacks.Count; i++)
{
    var isVisible = Model.ProductPacks[i].AmountRemaining > 0;
    var visible = isVisible ? "" : "none";
    var visibleClass = isVisible ? "" : "complete-rows";

    @Html.HiddenFor(e => Model.ProductPacks[i].Id)
    @Html.HiddenFor(e => Model.ProductPacks[i].Amount)

    <div class="well">
        <div class="padding-5 padding-top-15 row @visibleClass" style="display: @visible;">
            <div class="col-sm-3">
                @Html.LabelFor(e => Model.ProductPacks[i].ProductPack.Name)
                <a tabindex="-1" target="_blank" href="@Url.Action("Details", "ProductPacks", new {id = Model.ProductPacks[i].ProductPackId})">
                    @Html.DisplayFor(e => Model.ProductPacks[i].ProductPack.Name)
                </a>
            </div>
            <div class="col-sm-3">
                @Html.BootstrapDisplayFor(e => Model.ProductPacks[i].Amount)
            </div>
            <div class="col-sm-3">
                @Html.BootstrapEditorFor(e => Model.ProductPacks[i].AmountCompleted)
            </div>
            <div class="col-sm-3">
                @Html.BootstrapDisplayFor(e => Model.ProductPacks[i].AmountRemaining)
            </div>
        </div>
        <div class="padding-5 padding-top-15 row @visibleClass" style="display: @visible;">
            <div class="col-sm-12">
                <h4>@Dictionary.Products</h4>

                @for (int j = 0; j < Model.ProductPacks[i].ProductPackProducts.Count; j++)
                {
                    var childIsVisible = Model.ProductPacks[i].ProductPackProducts[j].AmountRemaining > 0;
                    var childVisible = childIsVisible ? "" : "none";
                    var childVisibleClass = childIsVisible ? "" : "complete-rows";

                    @Html.HiddenFor(e => Model.ProductPacks[i].ProductPackProducts[j].Id)
                    @Html.HiddenFor(e => Model.ProductPacks[i].ProductPackProducts[j].OrderProductPackId)
                    @Html.HiddenFor(e => Model.ProductPacks[i].ProductPackProducts[j].ProductId)

                    <div class="padding-5 padding-top-15 row @visibleClass" style="display: @visible">
                        <div class="col-sm-4">
                            @Html.LabelFor(e => Model.ProductPacks[i].ProductPackProducts[j].Product.Name)
                            <a tabindex="-1" target="_blank" href="@Url.Action("LabSheet", "Products", new {id = Model.ProductPacks[i].ProductPackProducts[j].ProductId, batchSize = Model.ProductPacks[i].ProductPackProducts[j].AmountRemaining})">
                                @Html.DisplayFor(e => Model.ProductPacks[i].ProductPackProducts[j].Product.Name)
                            </a>
                        </div>
                        <div class="col-sm-2">
                            @Html.BootstrapDisplayFor(e => Model.ProductPacks[i].ProductPackProducts[j].Amount)
                        </div>
                        <div class="col-sm-3">
                            @Html.BootstrapEditorFor(e => Model.ProductPacks[i].ProductPackProducts[j].AmountCompleted)
                        </div>
                        <div class="col-sm-3">
                            @Html.BootstrapDisplayFor(e => Model.ProductPacks[i].ProductPackProducts[j].AmountRemaining)
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
    <div class="padding-5 padding-top-15 row @visibleClass" style="display: @visible;">
        <hr />
    </div>
}

