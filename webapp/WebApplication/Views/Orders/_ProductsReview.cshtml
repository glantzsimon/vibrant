@using K9.Base.WebApplication.Extensions
@using K9.Base.WebApplication.Helpers
@using K9.WebApplication.Helpers
@model Order

<div class="row">
    <div class="col-sm-12">
        <h3>@Dictionary.Products</h3>
    </div>
</div>

<div class="row">
    <div class="col-sm-3">
        @Html.LabelFor(e => Model.Products[0].Name)
    </div>
    <div class="col-sm-3">
        @Html.LabelFor(e => Model.Products[0].Amount)
    </div>
    <div class="col-sm-3">
        @Html.LabelFor(e => Model.Products[0].AmountCompleted)
    </div>
    <div class="col-sm-3">
        @Html.LabelFor(e => Model.Products[0].AmountRemaining)
    </div>
</div>
<hr />
@for (int i = 0; i < Model.Products.Count; i++)
{
    @Html.HiddenFor(e => Model.Products[i].Id)
    
    <div class="row">
        <div class="col-sm-3">
            <a target="_blank" href="@Url.Action("LabSheet", "Products", new {id = Model.Products[i].ProductId, batchSize = Model.Products[i].AmountRemaining})">
                @Html.DisplayFor(e => Model.Products[i].Product.Name)
            </a>
        </div>
        <div class="col-sm-3">
            @Html.DisplayFor(e => Model.Products[i].Amount)
        </div>
        <div class="col-sm-3">
            @Html.EditorFor(e => Model.Products[i].AmountCompleted)
        </div>
        <div class="col-sm-3">
            @Html.DisplayFor(e => Model.Products[i].AmountRemaining)
        </div>
    </div>
    if (i < Model.Products.Count - 1)
    {
        <hr />
    }
}

